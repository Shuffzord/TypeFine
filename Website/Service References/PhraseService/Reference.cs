//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Website.PhraseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.AddPhraseRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.CheckRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.UpdateRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.NotificationRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.MatchRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.GetMessagesRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.GetRandomPhraseRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.WordOfTheDayRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.LogErrorRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.LogTimeRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Website.PhraseService.GetPhrasesRequest))]
    public partial class BaseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId {
            get {
                return this.DeviceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceIdField, value) != true)) {
                    this.DeviceIdField = value;
                    this.RaisePropertyChanged("DeviceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddPhraseRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class AddPhraseRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Right {
            get {
                return this.RightField;
            }
            set {
                if ((object.ReferenceEquals(this.RightField, value) != true)) {
                    this.RightField = value;
                    this.RaisePropertyChanged("Right");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class CheckRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class UpdateRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateDate {
            get {
                return this.LastUpdateDateField;
            }
            set {
                if ((this.LastUpdateDateField.Equals(value) != true)) {
                    this.LastUpdateDateField = value;
                    this.RaisePropertyChanged("LastUpdateDate");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class NotificationRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChannelUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelUrl {
            get {
                return this.ChannelUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelUrlField, value) != true)) {
                    this.ChannelUrlField = value;
                    this.RaisePropertyChanged("ChannelUrl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class MatchRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhraseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phrase {
            get {
                return this.PhraseField;
            }
            set {
                if ((object.ReferenceEquals(this.PhraseField, value) != true)) {
                    this.PhraseField = value;
                    this.RaisePropertyChanged("Phrase");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMessagesRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class GetMessagesRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRandomPhraseRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class GetRandomPhraseRequest : Website.PhraseService.BaseRequest {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordOfTheDayRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class WordOfTheDayRequest : Website.PhraseService.BaseRequest {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogErrorRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class LogErrorRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Website.PhraseService.LogErrorType LogErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Website.PhraseService.LogErrorType LogErrorType {
            get {
                return this.LogErrorTypeField;
            }
            set {
                if ((this.LogErrorTypeField.Equals(value) != true)) {
                    this.LogErrorTypeField = value;
                    this.RaisePropertyChanged("LogErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogTimeRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class LogTimeRequest : Website.PhraseService.BaseRequest {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPhrasesRequest", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class GetPhrasesRequest : Website.PhraseService.BaseRequest {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SkipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Skip {
            get {
                return this.SkipField;
            }
            set {
                if ((this.SkipField.Equals(value) != true)) {
                    this.SkipField = value;
                    this.RaisePropertyChanged("Skip");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogErrorType", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    public enum LogErrorType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AdsError = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetPhrasesResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class GetPhrasesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Website.PhraseService.Phrase[] PhrasesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Website.PhraseService.Phrase[] Phrases {
            get {
                return this.PhrasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhrasesField, value) != true)) {
                    this.PhrasesField = value;
                    this.RaisePropertyChanged("Phrases");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Phrase", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class Phrase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeywordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Right {
            get {
                return this.RightField;
            }
            set {
                if ((object.ReferenceEquals(this.RightField, value) != true)) {
                    this.RightField = value;
                    this.RaisePropertyChanged("Right");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class CheckResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewPhrasesCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewPhrasesCount {
            get {
                return this.NewPhrasesCountField;
            }
            set {
                if ((this.NewPhrasesCountField.Equals(value) != true)) {
                    this.NewPhrasesCountField = value;
                    this.RaisePropertyChanged("NewPhrasesCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class UpdateResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PhrasesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Phrases {
            get {
                return this.PhrasesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhrasesField, value) != true)) {
                    this.PhrasesField = value;
                    this.RaisePropertyChanged("Phrases");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMessagesResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class GetMessagesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Website.PhraseService.Message[] MessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Website.PhraseService.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeaderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Header {
            get {
                return this.HeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.HeaderField, value) != true)) {
                    this.HeaderField = value;
                    this.RaisePropertyChanged("Header");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WordOfTheDayResponse", Namespace="http://schemas.datacontract.org/2004/07/Service.Contracts")]
    [System.SerializableAttribute()]
    public partial class WordOfTheDayResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Website.PhraseService.Phrase PhraseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Website.PhraseService.Phrase Phrase {
            get {
                return this.PhraseField;
            }
            set {
                if ((object.ReferenceEquals(this.PhraseField, value) != true)) {
                    this.PhraseField = value;
                    this.RaisePropertyChanged("Phrase");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhraseService.IApiService")]
    public interface IApiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetPhrase", ReplyAction="http://tempuri.org/IApiService/GetPhraseResponse")]
        Website.PhraseService.GetPhrasesResponse GetPhrase(Website.PhraseService.GetPhrasesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetPhrase", ReplyAction="http://tempuri.org/IApiService/GetPhraseResponse")]
        System.Threading.Tasks.Task<Website.PhraseService.GetPhrasesResponse> GetPhraseAsync(Website.PhraseService.GetPhrasesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/AddPhrase", ReplyAction="http://tempuri.org/IApiService/AddPhraseResponse")]
        void AddPhrase(Website.PhraseService.AddPhraseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/AddPhrase", ReplyAction="http://tempuri.org/IApiService/AddPhraseResponse")]
        System.Threading.Tasks.Task AddPhraseAsync(Website.PhraseService.AddPhraseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/Check", ReplyAction="http://tempuri.org/IApiService/CheckResponse")]
        Website.PhraseService.CheckResponse Check(Website.PhraseService.CheckRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/Check", ReplyAction="http://tempuri.org/IApiService/CheckResponse")]
        System.Threading.Tasks.Task<Website.PhraseService.CheckResponse> CheckAsync(Website.PhraseService.CheckRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/Update", ReplyAction="http://tempuri.org/IApiService/UpdateResponse")]
        Website.PhraseService.UpdateResponse Update(Website.PhraseService.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/Update", ReplyAction="http://tempuri.org/IApiService/UpdateResponse")]
        System.Threading.Tasks.Task<Website.PhraseService.UpdateResponse> UpdateAsync(Website.PhraseService.UpdateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/RegisterOrUpdateUserNotification", ReplyAction="http://tempuri.org/IApiService/RegisterOrUpdateUserNotificationResponse")]
        void RegisterOrUpdateUserNotification(Website.PhraseService.NotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/RegisterOrUpdateUserNotification", ReplyAction="http://tempuri.org/IApiService/RegisterOrUpdateUserNotificationResponse")]
        System.Threading.Tasks.Task RegisterOrUpdateUserNotificationAsync(Website.PhraseService.NotificationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/Match", ReplyAction="http://tempuri.org/IApiService/MatchResponse")]
        void Match(Website.PhraseService.MatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/Match", ReplyAction="http://tempuri.org/IApiService/MatchResponse")]
        System.Threading.Tasks.Task MatchAsync(Website.PhraseService.MatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetMessages", ReplyAction="http://tempuri.org/IApiService/GetMessagesResponse")]
        Website.PhraseService.GetMessagesResponse GetMessages(Website.PhraseService.GetMessagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetMessages", ReplyAction="http://tempuri.org/IApiService/GetMessagesResponse")]
        System.Threading.Tasks.Task<Website.PhraseService.GetMessagesResponse> GetMessagesAsync(Website.PhraseService.GetMessagesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetRandomPhrase", ReplyAction="http://tempuri.org/IApiService/GetRandomPhraseResponse")]
        Website.PhraseService.GetPhrasesResponse GetRandomPhrase(Website.PhraseService.GetRandomPhraseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetRandomPhrase", ReplyAction="http://tempuri.org/IApiService/GetRandomPhraseResponse")]
        System.Threading.Tasks.Task<Website.PhraseService.GetPhrasesResponse> GetRandomPhraseAsync(Website.PhraseService.GetRandomPhraseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetLastWordOfTheDay", ReplyAction="http://tempuri.org/IApiService/GetLastWordOfTheDayResponse")]
        Website.PhraseService.WordOfTheDayResponse GetLastWordOfTheDay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetLastWordOfTheDay", ReplyAction="http://tempuri.org/IApiService/GetLastWordOfTheDayResponse")]
        System.Threading.Tasks.Task<Website.PhraseService.WordOfTheDayResponse> GetLastWordOfTheDayAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetWordOfTheDay", ReplyAction="http://tempuri.org/IApiService/GetWordOfTheDayResponse")]
        Website.PhraseService.WordOfTheDayResponse GetWordOfTheDay(Website.PhraseService.WordOfTheDayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/GetWordOfTheDay", ReplyAction="http://tempuri.org/IApiService/GetWordOfTheDayResponse")]
        System.Threading.Tasks.Task<Website.PhraseService.WordOfTheDayResponse> GetWordOfTheDayAsync(Website.PhraseService.WordOfTheDayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/LogError", ReplyAction="http://tempuri.org/IApiService/LogErrorResponse")]
        void LogError(Website.PhraseService.LogErrorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/LogError", ReplyAction="http://tempuri.org/IApiService/LogErrorResponse")]
        System.Threading.Tasks.Task LogErrorAsync(Website.PhraseService.LogErrorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/LogTime", ReplyAction="http://tempuri.org/IApiService/LogTimeResponse")]
        void LogTime(Website.PhraseService.LogTimeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApiService/LogTime", ReplyAction="http://tempuri.org/IApiService/LogTimeResponse")]
        System.Threading.Tasks.Task LogTimeAsync(Website.PhraseService.LogTimeRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApiServiceChannel : Website.PhraseService.IApiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApiServiceClient : System.ServiceModel.ClientBase<Website.PhraseService.IApiService>, Website.PhraseService.IApiService {
        
        public ApiServiceClient() {
        }
        
        public ApiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Website.PhraseService.GetPhrasesResponse GetPhrase(Website.PhraseService.GetPhrasesRequest request) {
            return base.Channel.GetPhrase(request);
        }
        
        public System.Threading.Tasks.Task<Website.PhraseService.GetPhrasesResponse> GetPhraseAsync(Website.PhraseService.GetPhrasesRequest request) {
            return base.Channel.GetPhraseAsync(request);
        }
        
        public void AddPhrase(Website.PhraseService.AddPhraseRequest request) {
            base.Channel.AddPhrase(request);
        }
        
        public System.Threading.Tasks.Task AddPhraseAsync(Website.PhraseService.AddPhraseRequest request) {
            return base.Channel.AddPhraseAsync(request);
        }
        
        public Website.PhraseService.CheckResponse Check(Website.PhraseService.CheckRequest request) {
            return base.Channel.Check(request);
        }
        
        public System.Threading.Tasks.Task<Website.PhraseService.CheckResponse> CheckAsync(Website.PhraseService.CheckRequest request) {
            return base.Channel.CheckAsync(request);
        }
        
        public Website.PhraseService.UpdateResponse Update(Website.PhraseService.UpdateRequest request) {
            return base.Channel.Update(request);
        }
        
        public System.Threading.Tasks.Task<Website.PhraseService.UpdateResponse> UpdateAsync(Website.PhraseService.UpdateRequest request) {
            return base.Channel.UpdateAsync(request);
        }
        
        public void RegisterOrUpdateUserNotification(Website.PhraseService.NotificationRequest request) {
            base.Channel.RegisterOrUpdateUserNotification(request);
        }
        
        public System.Threading.Tasks.Task RegisterOrUpdateUserNotificationAsync(Website.PhraseService.NotificationRequest request) {
            return base.Channel.RegisterOrUpdateUserNotificationAsync(request);
        }
        
        public void Match(Website.PhraseService.MatchRequest request) {
            base.Channel.Match(request);
        }
        
        public System.Threading.Tasks.Task MatchAsync(Website.PhraseService.MatchRequest request) {
            return base.Channel.MatchAsync(request);
        }
        
        public Website.PhraseService.GetMessagesResponse GetMessages(Website.PhraseService.GetMessagesRequest request) {
            return base.Channel.GetMessages(request);
        }
        
        public System.Threading.Tasks.Task<Website.PhraseService.GetMessagesResponse> GetMessagesAsync(Website.PhraseService.GetMessagesRequest request) {
            return base.Channel.GetMessagesAsync(request);
        }
        
        public Website.PhraseService.GetPhrasesResponse GetRandomPhrase(Website.PhraseService.GetRandomPhraseRequest request) {
            return base.Channel.GetRandomPhrase(request);
        }
        
        public System.Threading.Tasks.Task<Website.PhraseService.GetPhrasesResponse> GetRandomPhraseAsync(Website.PhraseService.GetRandomPhraseRequest request) {
            return base.Channel.GetRandomPhraseAsync(request);
        }
        
        public Website.PhraseService.WordOfTheDayResponse GetLastWordOfTheDay() {
            return base.Channel.GetLastWordOfTheDay();
        }
        
        public System.Threading.Tasks.Task<Website.PhraseService.WordOfTheDayResponse> GetLastWordOfTheDayAsync() {
            return base.Channel.GetLastWordOfTheDayAsync();
        }
        
        public Website.PhraseService.WordOfTheDayResponse GetWordOfTheDay(Website.PhraseService.WordOfTheDayRequest request) {
            return base.Channel.GetWordOfTheDay(request);
        }
        
        public System.Threading.Tasks.Task<Website.PhraseService.WordOfTheDayResponse> GetWordOfTheDayAsync(Website.PhraseService.WordOfTheDayRequest request) {
            return base.Channel.GetWordOfTheDayAsync(request);
        }
        
        public void LogError(Website.PhraseService.LogErrorRequest request) {
            base.Channel.LogError(request);
        }
        
        public System.Threading.Tasks.Task LogErrorAsync(Website.PhraseService.LogErrorRequest request) {
            return base.Channel.LogErrorAsync(request);
        }
        
        public void LogTime(Website.PhraseService.LogTimeRequest request) {
            base.Channel.LogTime(request);
        }
        
        public System.Threading.Tasks.Task LogTimeAsync(Website.PhraseService.LogTimeRequest request) {
            return base.Channel.LogTimeAsync(request);
        }
    }
}
