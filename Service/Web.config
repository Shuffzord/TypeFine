<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <connectionStrings>
   <add name="TypeFineDb" connectionString="Data Source=ITM0352V2\DEV2012;Initial Catalog=TypeFineDb;Persist Security Info=True;User ID=gouda;Password=gouda123" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <compilation targetFramework="4.5" debug="true">
      <assemblies>
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </assemblies>
    </compilation>
    <httpRuntime targetFramework="4.5" /> 
  </system.web>
  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <behavior name="jsonBehavior">
          <webHttp />
        </behavior>
        <behavior name="soapBehavior">
        </behavior>
      <behavior name="mexBehavior">
      </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="soapBehavior">
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="jsonBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="mexBehavior">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <protocolMapping>
      <add binding="basicHttpBinding" bindingConfiguration="Binding_IApiService"  scheme="http" />
      <add binding="webHttpBinding" bindingConfiguration="Binding_IApiService" scheme="http"/>
    </protocolMapping>
    <bindings>
      <webHttpBinding>
        <binding name="Binding_IApiService"/>
      </webHttpBinding>
      <basicHttpBinding>
        <binding name="Binding_IApiService" />
      </basicHttpBinding>
    </bindings>
    <services>
      <service name="Service.ApiService" behaviorConfiguration="mexBehavior">
        <endpoint binding="basicHttpBinding" contract="Service.Contracts.IApiService" />
        <endpoint address="json" binding="webHttpBinding"  behaviorConfiguration="jsonBehavior" contract="Service.Contracts.IApiService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" behaviorConfiguration="" />
          <host>
          <baseAddresses>
            <add baseAddress="http://www.api.jakpisac.edu.pl/ApiService.svc"/>
          </baseAddresses>
        </host>
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" minFreeMemoryPercentageToActivateService="0">
      <baseAddressPrefixFilters>
        <add prefix="http://jakpisac.hostingasp.pl" />
      </baseAddressPrefixFilters>
    </serviceHostingEnvironment>
    <extensions>
      <behaviorExtensions>
        <add name="schemaValidator" type="Service.Inspection.RequestInfoSavingInspector, Service, Version=1.0.0.0, Culture=neutral"/>
      </behaviorExtensions>
    </extensions>
  </system.serviceModel>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>